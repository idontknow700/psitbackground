import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import*as dat from"dat.gui";const textureLoader=new THREE.TextureLoader,circleTexture=textureLoader.load("/circle.png"),canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,geometry=new THREE.TorusGeometry(.7,.2,16,100),particlesGeometry=new THREE.BufferGeometry,particleCount=5e3,posArr=new Float32Array(15e3);for(let e=0;e<15e3;e++)posArr[e]=12*(Math.random()-.5);particlesGeometry.setAttribute("position",new THREE.BufferAttribute(posArr,3));const material=new THREE.PointsMaterial({size:.007}),particleMaterial=new THREE.PointsMaterial({size:.005,map:circleTexture,transparent:!0}),sphere=new THREE.Points(geometry,material),particleMesh=new THREE.Points(particlesGeometry,particleMaterial);scene.add(sphere,particleMesh);const pointLight=new THREE.PointLight(16777215,.1);pointLight.position.x=2,pointLight.position.y=3,pointLight.position.z=4,scene.add(pointLight);const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,1e3);camera.position.set(0,0,2),scene.add(camera);const controls=new OrbitControls(camera,canvas);controls.enableDamping=!0,controls.enableZoom=!1,controls.autoRotate=!0;const renderer=new THREE.WebGLRenderer({canvas});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.setClearColor(new THREE.Color("#21202a"),1);const clock=new THREE.Clock,tick=()=>{clock.getElapsedTime(),controls.update(),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();